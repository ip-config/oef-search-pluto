syntax = "proto3";

import "dap_api/src/protos/dap_agent_uri.proto";
import "fetch_teams/oef_core_protocol/query.proto";

message DapUpdate {

  message DapValue {
    int32 type = 1;
    // type 1 == NONE, all others match fieldname below.
    string s = 2;
    int64 i = 3;
    float f = 4;
    double d = 5;

    fetch.oef.pb.Query.DataModel dm = 6;
  }

  message TableFieldValue {
    DapAgentUri key =2;
    string fieldname = 3;
    DapValue value = 4;
  }

  repeated TableFieldValue update = 2;
};

// Conceptually, A DAP table is a set of rows, one per agent and a set of columns.
// A query matches columns and returns the keys which match all queries.
// So an update writes into that sparse table structure to store values.
//
//
// We need to work out what to do when an agent or OEF
// de-registers. We need some API for that to kill all the relevant rows.

